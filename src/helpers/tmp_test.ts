import { TexLinebreak } from 'src/helpers/index';
import { TextInputItem } from 'src/helpers/util';
import { MIN_COST } from 'src/breakLines';

const items = [
  { type: 'glue', width: 12, shrink: 0, stretch: 8, text: '\n      \n        ' },
  { type: 'glue', width: 8, shrink: 0, stretch: 8, text: '\n        ' },
  { type: 'box', width: 36.4453125, text: 'Some' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 42.6640625, text: 'simple' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 23.9921875, text: 'text' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 28.4453125, text: 'with' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 65.75, text: 'embedded' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 36.4375, text: 'inline' },
  { type: 'glue', width: 8, shrink: 0, stretch: 8, text: '\n        ' },
  { type: 'box', width: 23.1015625, text: 'and' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 35.546875, text: 'block' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 56.8671875, text: 'elements' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 22.203125, text: 'can' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 15.1015625, text: 'be' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 37.328125, text: 'found' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 12.4453125, text: 'in' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 23.1171875, text: 'this' },
  { type: 'glue', width: 8, shrink: 0, stretch: 8, text: '\n        ' },
  { type: 'box', width: 63.9609375, text: 'paragraph' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 13.328125, text: 'of' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 23.9921875, text: 'text' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 39.1015625, text: 'which' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 53.3203125, text: 'includes' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 28.4453125, text: 'bold' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 27.9921875, text: 'text,', rightHangingPunctuationWidth: 4 },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 13.328125, text: 'as' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 27.546875, text: 'well' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 13.328125, text: 'as' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 31.984375, text: 'italic' },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: ' ' },
  { type: 'box', width: 27.9921875, text: 'text.', rightHangingPunctuationWidth: 4 },
  { type: 'glue', width: 4, shrink: 0, stretch: 8, text: '\n    ' },
  { type: 'penalty', width: 0, cost: MIN_COST },
] as TextInputItem[];

console.log(
  new TexLinebreak({
    // text: 'Nulla ultricies, dolor in sagittis rutrum, nibh purus bibendum dui, nec aliquet ligula mi eget2 lectus. Nulla eget metus scelerisque, venenatis sapien ut, congue eros. Morbi convallis venenatis mauris, laoreet faucibus magna malesuada sed. Nulla consequat dignissim arcu non vestibulum. In commodo tristique scelerisque.',
    items,
    lineWidth: 300,
    // measureFn: (text: string) => {
    //   return text.length;
    // },
    // preset: 'monospace',
    // hyphenate: false,
  }).getPlainText(),
);
